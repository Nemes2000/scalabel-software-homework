// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using food_service.Database;

#nullable disable

namespace food_service.Migrations
{
    [DbContext(typeof(FoodDbContext))]
    [Migration("20250114132212_InitContext")]
    partial class InitContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("food_service.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 1,
                            Description = "Juicy beef patty, cheddar, lettuce, tomato, pickles, and house sauce on a brioche bun.",
                            ImagePath = "1.jpg",
                            Name = "Burger",
                            Price = 1500
                        },
                        new
                        {
                            Id = 2,
                            Category = 1,
                            Description = "Al dente pasta in creamy garlic sauce with sun-dried tomatoes, spinach, and Parmesan.",
                            ImagePath = "2.jpg",
                            Name = "Pasta",
                            Price = 1200
                        },
                        new
                        {
                            Id = 3,
                            Category = 0,
                            Description = "Roasted tomatoes blended with fresh basil and cream, served with crispy grilled cheese croutons.",
                            ImagePath = "3.jpg",
                            Name = "Soup",
                            Price = 1000
                        },
                        new
                        {
                            Id = 4,
                            Category = 1,
                            Description = "Fresh greens, olives, feta, cucumbers, and tomatoes with lemon-oregano vinaigrette.",
                            ImagePath = "4.jpg",
                            Name = "Salad",
                            Price = 800
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
